import argparse
import os
import numpy as np
from tqdm import tqdm
import pandas as pd

parser = argparse.ArgumentParser(description="Bla bla bla")

required_args = parser.add_argument_group('Required Arguments')
opt_args = parser.add_argument_group("Optional Arguments")

required_args.add_argument("-i", "--input", help="Relative or direct path to npy files", required=True)
args = parser.parse_args()

total_cnv_count = {"Training": {"DEL": 0, "DUP": 0}, "Test": {"DEL": 0, "DUP": 0}}

directory = args.input

ecoleTestSamples = ["HG02130", "HG00683", "HG00366", "HG02221", "HG02255", "HG00556", "HG01799", "HG01602", "HG01892", "HG01527", "HG00728", "HG00335", "HG00258", "HG01377", "HG02348", "HG01479", "HG02078", "HG00626", "HG02181", "HG01260", "HG00233", "HG02105", "HG01522", "HG01852", "HG00559", "HG02013", "HG01498", "HG00269", "HG01842", "HG02133", "HG01277", "HG00240", "HG01374", "HG01961", "HG00608", "HG01311", "HG00739", "HG01841", "HG01843", "HG01697", "HG02020", "HG01465", "HG01874", "HG02184", "HG02008", "HG01678", "HG01414", "HG02025", "HG01054", "HG02144", "HG01325", "HG02052", "HG00708", "HG00553", "HG01896", "HG01885", "HG00285", "HG00584", "HG00651", "HG01586", "HG02304", "HG00557", "HG00982", "HG01097", "HG00580", "HG01784", "HG01060", "HG01443", "HG02146", "HG01862", "HG00565", "HG01917", "HG00262", "HG01985", "HG01864", "HG00729", "HG02035", "HG01312", "HG02107", "HG01188", "HG01807", "HG01766", "HG02323", "HG01624", "HG01967", "HG01067", "HG00638", "HG00343", "HG01510", "HG01770", "HG01923", "HG01083", "HG01781", "HG00671", "HG00235", "HG02180", "HG01528", "HG02260", "HG02318", "HG01596", "HG01183", "HG00371", "HG02087", "HG01775", "HG02014", "HG02252", "HG01705", "HG01486", "HG01122", "HG01167", "HG00650", "HG00620", "HG01403", "HG00513", "HG00264", "HG01405", "HG01599", "HG01933", "HG00380", "HG01669", "HG00267", "HG01685", "HG00589", "HG01948", "HG01435", "HG00881", "HG02108", "HG02067", "HG00451", "HG01767", "HG01986", "HG01813", "HG00705", "HG02010", "HG00406", "HG01242", "HG02029", "HG01707", "HG00311", "HG01954", "HG01102", "HG02281", "HG01254", "HG01947", "HG01618", "HG00319", "HG00284", "HG01997", "HG00457", "HG01679", "HG00273", "HG00458", "HG01878", "HG02274", "HG01028", "HG00524", "HG01395"]
ecoleTrainingSamples = ["HG00472", "HG01119", "HG02190", "HG01444", "HG01113", "HG00288", "HG01860", "HG00237", "HG02023", "HG02356", "HG02292", "HG01809", "HG00622", "HG02239", "HG01918", "HG01066", "HG01372", "HG01048", "HG01173", "HG01353", "HG01468", "HG00336", "HG02089", "HG01359", "HG01606", "HG01869", "HG00879", "HG00867", "HG01111", "HG01474", "HG02079", "HG01075", "HG01857", "HG02139", "HG02230", "HG01531", "HG00473", "HG02332", "HG01051", "HG01164", "HG01605", "HG01072", "HG01198", "HG01865", "HG01253", "HG01845", "HG00736", "HG01354", "HG01802", "HG01610", "HG01187", "HG01801", "HG01049", "HG01110", "HG01485", "HG00253", "HG01598", "HG01926", "HG01088", "HG01921", "HG01398", "HG02182", "HG01360", "HG02231", "HG00421", "HG00554", "HG01497", "HG01190", "HG00242", "HG00631", "HG01847", "HG01351", "HG01783", "HG01271", "HG02262", "HG01844", "HG00331", "HG00304", "HG02307", "HG00442", "HG01914", "HG01461", "HG00096", "HG01256", "HG01507", "HG01811", "HG01489", "HG02143", "HG01509", "HG00662", "HG01069", "HG01756", "HG01492", "HG02142", "HG00252", "HG00864", "HG01956", "HG00277", "HG00419", "HG01396", "HG00332", "HG01437", "HG00367", "HG01272", "HG02238", "HG00260", "HG02156", "HG00251", "HG00614", "HG02233", "HG02075", "HG01880", "HG01958", "HG01086", "HG01063", "HG01628", "HG01840", "HG01241", "HG00590", "HG00674", "HG02069", "HG00844", "HG00268", "HG01047", "HG01571", "HG01341", "HG01205", "HG00326", "HG00632", "HG01055", "HG00250", "HG02113", "HG01870", "HG01768", "HG02072", "HG02186", "HG01085", "HG01684", "HG00099", "HG01124", "HG00583", "HG01858", "HG01572", "HG01438", "HG00422", "HG01747", "HG02090", "HG02298", "HG00325", "HG02166", "HG01623", "HG00478", "HG00436", "HG00543", "HG01257", "HG01149", "HG01920", "HG01174", "HG01441", "HG00640", "HG00278", "HG02317", "HG01710", "HG02259", "HG02061", "HG00449", "HG02084", "HG02028", "HG02006", "HG01046", "HG01200", "HG01139", "HG02009", "HG01350", "HG02085", "HG01894", "HG00464", "HG01583", "HG02284", "HG02019", "HG02291", "HG02215", "HG01125", "HG01402", "HG01848", "HG01095", "HG02282", "HG01518", "HG01079", "HG02017", "HG00334", "HG00309", "HG01953", "HG01133", "HG01284", "HG01597", "HG01501", "HG00310", "HG02322", "HG02047", "HG01630", "HG01204", "HG00382", "HG00372", "HG00653", "HG01915", "HG01326", "HG00353", "HG01512", "HG01369", "HG02285", "HG00245", "HG00551", "HG00592", "HG00634", "HG00276", "HG01248", "HG00692", "HG00280", "HG02337", "HG01893", "HG00537", "HG02081", "HG01494", "HG01777", "HG02140", "HG02051", "HG01889", "HG01440", "HG00607", "HG01790", "HG01140", "HG01805", "HG01521", "HG00536", "HG01699", "HG01176", "HG01323", "HG01362", "HG01816", "HG01851", "HG01625", "HG01631", "HG00542", "HG02070", "HG00598", "HG00595", "HG00463", "HG02050", "HG00239", "HG01412", "HG02188", "HG02064", "HG02278", "HG00256", "HG02088", "HG01191", "HG00324", "HG01992", "HG01971", "HG00663", "HG00375", "HG00327", "HG01762", "HG00534", "HG01708", "HG01890", "HG01771", "HG00560", "HG02016", "HG02082", "HG01305", "HG01668", "HG00445", "HG00384", "HG02179", "HG02185", "HG01134", "HG01935", "HG02057", "HG00448", "HG01613", "HG00361", "HG01912", "HG00345", "HG00369", "HG01148", "HG01524", "HG01593", "HG01990", "HG02151", "HG01991", "HG01058", "HG01551", "HG01694", "HG01137", "HG00357", "HG01413", "HG02147", "HG01879", "HG01883", "HG00531", "HG01131", "HG01927", "HG01988", "HG00257", "HG02223", "HG02283", "HG01866", "HG02353", "HG01941", "HG01686", "HG02232", "HG00254", "HG01171", "HG01578", "HG00623", "HG00376", "HG01259", "HG01797", "HG00321", "HG01974", "HG00732", "HG00672", "HG02138", "HG01702", "HG02054", "HG00263", "HG00360", "HG01950", "HG02277", "HG01980", "HG00329", "HG01308", "HG02343", "HG01516", "HG02309", "HG01101", "HG01620", "HG00479", "HG01073", "HG01393", "HG00404", "HG00306", "HG02219", "HG02031", "HG01603", "HG02136", "HG02104", "HG01938", "HG01789", "HG01488", "HG02058", "HG00328", "HG01456", "HG01281", "HG00701", "HG00619", "HG00475", "HG00625", "HG00271", "HG00378", "HG01348", "HG00368", "HG01673", "HG00629", "HG01432", "HG01932", "HG00656", "HG02102", "HG01600", "HG01595", "HG01112", "HG00362", "HG00476", "HG00265", "HG01612", "HG00699", "HG01682", "HG01849", "HG02299", "HG01976", "HG01817", "HG00246", "HG00236", "HG01334", "HG02165", "HG00525", "HG01356", "HG01530", "HG01061", "HG01800", "HG01810", "HG01108", "HG01345", "HG00338", "HG01363", "HG00315", "HG00234", "HG00690", "HG02272", "HG01779", "HG00410", "HG02351", "HG00596", "HG00318", "HG00452", "HG01504", "HG02060", "HG01757", "HG00743", "HG01269", "HG01250", "HG01565", "HG01589", "HG01121", "HG00500", "HG01704", "HG00599", "HG02134", "HG00232", "HG02312", "HG01525", "HG02086", "HG01162", "HG01806", "HG01871", "HG02116", "HG01550", "HG01566", "HG01855", "HG00740", "HG01965", "HG00684", "HG01945", "HG00978", "HG02152", "HG01617", "HG01031", "HG01197", "HG01670", "HG01130", "HG01375", "HG01979", "HG01462", "HG01342", "HG02153", "HG00610", "HG01776", "HG00341", "HG01970", "HG01455", "HG00255", "HG02266", "HG00379", "HG01495", "HG01815", "HG01384", "HG02256", "HG00355", "HG01459", "HG00628", "HG00956", "HG01029", "HG01182", "HG02220", "HG01798", "HG01168", "HG02330", "HG00356", "HG02286", "HG00346", "HG01812", "HG02315", "HG01503", "HG01092", "HG00313", "HG02155", "HG01924", "HG00657", "HG01968", "HG01344", "HG00350", "HG01794", "HG01161", "HG00766", "HG00611", "HG02073", "HG01951", "HG02164", "HG01142", "HG00409", "HG00403", "HG00698", "HG02053", "HG00238", "HG00581", "HG01107", "HG02187", "HG01765", "HG01859", "HG01882", "HG01868", "HG00351", "HG01506", "HG02128", "HG01537", "HG02040", "HG01357", "HG00281", "HG02250", "HG01302", "HG00428", "HG00593", "HG00290", "HG02137", "HG02325", "HG01105", "HG01077", "HG00734", "HG01491", "HG02314", "HG02002", "HG00566", "HG01247", "HG01709", "HG02095", "HG02048", "HG00689", "HG02265", "HG00330", "HG00358", "HG02076", "HG01447", "HG00097", "HG01556", "HG00261", "HG01136", "HG00373", "HG01365", "HG01094", "HG01863", "HG01104", "HG01700", "HG01936", "HG02345","HG01366", "HG00443", "HG00337", "HG01389"]

print("Traning Samples")
for sample in tqdm(ecoleTrainingSamples):
    f = os.path.join(directory, "Groundtruth_"+sample+".csv")
    cnv_calls = pd.read_csv(f, sep=",",header=None)[3]
    total_cnv_count["Training"]["DEL"] += np.sum(cnv_calls=="<DEL>")
    total_cnv_count["Training"]["DUP"] += np.sum(cnv_calls=="<DUP>")

print("Test Samples")
for sample in tqdm(ecoleTestSamples):
    f = os.path.join(directory, "Groundtruth_"+sample+".csv")
    cnv_calls = pd.read_csv(f, sep=",",header=None)[3]
    total_cnv_count["Test"]["DEL"] += np.sum(cnv_calls=="<DEL>")
    total_cnv_count["Test"]["DUP"] += np.sum(cnv_calls=="<DUP>")

print("Total CNV counts: "+str(total_cnv_count))